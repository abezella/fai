#! /bin/bash

# display some information about the system and save it to the logserver

if [ X$do_init_tasks = X1 ] ; then
    # activate all software RAID arrays
#    echo DEVICE partitions > /etc/mdadm/mdadm.conf

    # start software raid
    /usr/share/mdadm/mkconf > /etc/mdadm/mdadm.conf
    udevadm trigger
fi

# first show some hardware info
echo Showing system information.

# too much details [ -x "$(command -v dmidecode >&/dev/null)" ] && dmidecode
(
    cd /sys/class/dmi/id || exit
    grep . {board_,bios_,product_}* 2>/dev/null| sed -e 's/:/: /'| grep -E -iv '123456789|To Be Filled|: Not |N/A|:[[:blank:]]+$'
)

if command -v lshw >&/dev/null; then
    lshwtmp=$(mktemp)
    lshw -short -quiet -C system,memory,processor,display,storage,disk | tee $lshwtmp
    echo
    grep processor $lshwtmp| sed -e 's/[^ ]*//' | uniq -c | perl -pe 's/\s+(\d+)\s+(.+)/$1 $2/;'
    rm $lshwtmp
fi

echo -n "Counting all CPU cores: "
grep "model name" /proc/cpuinfo | sort | uniq -c | sed -e 's/model name.*://' -e 's/(R)//g' -e 's/(TM)//g' -e 's/^[[:blank:]]\+//'

echo "NUMA configuration:"
numactl -H

if [ -f /usr/bin/upower ]; then
    upower -e | grep 'BAT' | xargs -n1 upower -i | egrep 'native-path|vendor|model|energy-full'
fi

echo
if command -v hwinfo >&/dev/null; then
    hwinfo --short --cpu --sys
    hwinfo --short --smp
    hwinfo --short --bios
    hwinfo --short --storage-ctrl --netcard --framebuffer --gfxcard
    hwinfo --short --disk --cdrom --network
    hwinfo --short --sound --wlan
fi

echo
# print info about audio device
lspci | grep -i audio
[ -f /proc/asound/card0/codec#0 ] && grep Codec /proc/asound/card*/codec#*

echo
# show network device parameters of devies which are UP
devices=$(ip -br ad show up| awk '/UP / {print $1}' | tr '\n' ' ')
for dev in $devices; do
    ip addr show up $dev
done

echo '=================================================='
echo "Now more detailed information"
echo '=================================================='

lspci

if [ -d /sys/firmware/efi ]; then
    efibootmgr
fi

for device in /dev/sd?; do
    [ -b "$device" ] || continue # make sure device exists and is valid block device
    [ $(stat -c %G $device) = "disk" ] || continue
    hdparm -I $device | grep -E -v '^$' | head -5 | sed -e 's/^[[:blank:]]*//'
done

# pretty print disks by id and device names
find /dev/disk/by-id ! -type d -printf "%-40f\t->  %l\n" | grep -v part | sort -k3 | awk -F'->' '{print $2 ":  " $1}' | sed -e 's#../##g'

echo
cat /proc/partitions

command -v lsblk >&/dev/null && lsblk -i
command -v blkid >&/dev/null && blkid

# very detailed
echo "========================================"
for disk in $disklist; do
    smartctl -i /dev/$disk | tail +4
    echo "----------------------------------------"
    fdisk -lu /dev/$disk
    echo "----------------------------------------"
    parted -s /dev/$disk print
    echo "----------------------------------------"
    sfdisk -d /dev/$disk
    echo "----------------------------------------"
    LC_ALL=C file -s /dev/$disk?* | grep -v ": empty"
done

if command -v nvme >&/dev/null; then
    nvme list
fi

fdisk -lu

dmsetup ls

# show lvm information
pvs;vgs;lvs

if command -v btrfs >&/dev/null ; then
    btrfs fi show
fi

if [ X$do_init_tasks = X1 ]; then
     fai-mount-disk -fr
     [ -f $target/etc/fstab ] && cp -p $target/etc/fstab $LOGDIR
fi

df -PTh | grep -E ':|^/|^Filesystem'
# - - - - - - - - - - -
save_dmesg
fai-savelog -r
